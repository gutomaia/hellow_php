<?php
abstract class Msnp {

	var $EL = "\r\n";

	protected $_passport = null;
	protected $_trid;

	private $_connection;

	abstract function getHost();
	abstract function getPort();

	abstract function execute($cmd, $params = null);

	protected $_socket = null;

	protected function getSocket() {
		if ($this->_socket < 0) {
			$this->disconnect();
		} else {
			return $this->_socket;
		}
	}
	
	protected function send($cmd) {
		if ($this->getSocket()) {
			$this->_trid++;
			socket_write($this->getSocket(), $cmd, strlen($cmd));
			echo "<p style=\"color:#99cc00;\" >" . $cmd . "</p>";
		}
		flush();
	}

	protected function connect($host, $port) {
		if ($this->getSocket()) {
			socket_close($this->_socket);
			$this->_socket == null;
		}
		$this->_socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
		$this->_trid = 0;
		$result = socket_connect($this->_socket, $host, $port);
	}

	protected function disconnect() {
		if ($this->_socket) {
			socket_close($this->_socket);
			$this->_socket = null;
		} else {
			$this->_socket = null;
		}
	}

	function nextCommand() {
		if ($this->getSocket()) {
			$command = trim(socket_read($this->getSocket(), 2048, PHP_NORMAL_READ));
			$cmd = substr($command, 0, 3);
			if ($cmd == 'MSG') {
				$command_aux = explode(' ', $command);
				$bytes = intval($command_aux[sizeof($command_aux) - 1]);
				$payload = socket_read($this->getSocket(), $bytes);
				$command .= $this->EL. $payload;
			} else {
				//$command = substr($command, 0, strlen($command) -1);
			}
			if ($command != "") {
				echo "<p style=\"color:#ff0000;\" >" . $command . "</p>";
			}
		}
		return $command;
	}

	function getmicrotime() {
		list ($usec, $sec) = explode(" ", microtime());
		return ((float) $usec + (float) $sec);
	}

	function listen() {
		$cont = true;
		$initime = $this->getmicrotime();
		while ($cont) {
			$cmd = $this->nextCommand();
			if (!empty ($cmd)) {
				//substr($msg,0,3) == 'MSG'
				$tokens = explode(" ", $cmd);
				$this->execute($tokens[0], $tokens);
				flush();
			}
			$endtime = $this->getmicrotime();
			//echo ($endtime - $initime) ."<br>";
			if ($endtime - $initime > 30) {
				$cont = false;
			}
			if (!$this->getSocket()) {
				$cont = false;
			}
		}
		$this->logout();
	}
	
	function listen2() {
		$i = 0;
		if ($this->getSocket()){
			for ($cmd = $this->nextCommand(); !empty($cmd);$cmd = $this->nextCommand(), $i++){
				$tokens = explode(" ", $cmd);
				$this->execute($tokens[0], $tokens);
				flush();
				if (!$this->getSocket()) {
					return false;
				}
				echo $i;
				if ($i == 100){
					echo 'loop no listen 2';
					break;
				}
			}
			return true;
		}
		return false;
	}
}
?>